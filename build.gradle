apply plugin: 'java'
apply plugin: 'jetty'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
}
dependencies {

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.1'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.21'

    compile group: 'com.netflix.archaius', name: 'archaius-core', version: '0.6.6'

    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'com.sun.jersey', name: 'jersey-json', version: '1.19'
    compile group: 'com.sun.jersey', name: 'jersey-bundle', version: '1.19.2'

    compile group: 'com.thetransactioncompany', name: 'cors-filter', version: '2.5'



    testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.sun.jersey:jersey-client:1.19.1'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'com.mockrunner:mockrunner:0.3.1'

}
test {
    exclude '**/*IntegrationTest*'
}

task jettyDaemon() {
    onlyIf {
        'localhost'.equalsIgnoreCase(System.getProperty('integration.server', 'localhost'))
    }
    description = 'Starts Jetty in daemon mode'
    group = 'web application'
    doLast {
        project.jettyRun.daemon = true
    }

    finalizedBy jettyRun
}

jettyRun {

    System.setProperty('log4j.configurationFile', 'log4j2-local.xml')
    System.setProperty('archaius.deployment.applicationId', 'krashidbuilt.jetty')
    System.setProperty('archaius.deployment.region', 'us-west-2')
    System.setProperty('archaius.deployment.version', version)
    System.setProperty('archaius.deployment.environment', 'local')

    contextPath = '/'
    httpPort = Integer.valueOf(8080)
    stopPort = Integer.valueOf(8091)
    stopKey = rootProject.name
}

jettyStop {
    stopPort = Integer.valueOf(8091)
    stopKey = rootProject.name
}


task integrationTest(type: Test) {
    include '**/*IntegrationTest*'
    doFirst {
        jettyRun.contextPath = '/';
        jettyRun.httpPort = 8080    // Port for test
        jettyRun.daemon = true
        jettyRun.execute()
    }
    doLast {
        jettyStop.stopPort = 8091   // Port for stop signal
        jettyStop.stopKey = 'stopKey'
        jettyStop.execute()
    }
}
